// Generated by BUCKLESCRIPT VERSION 4.0.6, PLEASE EDIT WITH CARE

import * as Draw from "./Draw.bs.js";
import * as Actor from "./Actor.bs.js";
import * as Block from "./../../../../node_modules/bs-platform/lib/es6/block.js";
import * as Utils from "./Utils.bs.js";
import * as Director from "./Director.bs.js";
import * as Constants from "./Constants.bs.js";

var currentState = /* record */[/* direction : Right */1];

var initialGame_002 = /* snake */Actor.Snake[/* init */0](100, /* Right */1, Constants.constantsState[/* memberLength */2]);

var initialGame_003 = /* spawn : Normal */Block.__(0, [/* record */[
      /* pos : tuple */[
        100,
        100
      ],
      /* symbol */"*"
    ]]);

var initialGame = /* record */[
  /* state : Going */0,
  /* eaten : [] */0,
  initialGame_002,
  initialGame_003
];

function gameLoop(t, currentGame) {
  var newGame = Director.updateGame(t, currentGame, currentState[/* direction */0], Constants.constantsState);
  var canvas = Draw.load_canvas("canvas");
  Draw.draw_game(canvas, newGame, Constants.constantsState[/* memberLength */2]);
  requestAnimationFrame((function (t) {
          var match = newGame[/* state */0];
          if (match) {
            return /* () */0;
          } else {
            return gameLoop(t, newGame);
          }
        }));
  return /* () */0;
}

document.addEventListener("keydown", (function (evt) {
        var match = Director.handleKey(evt.keyCode, currentState[/* direction */0]);
        currentState[/* direction */0] = match !== undefined ? match : currentState[/* direction */0];
        return true;
      }), true);

gameLoop(performance.now(), initialGame);

var Utils$1 = Utils.Utils;

var MyString = Utils.MyString;

var MyList = Utils.MyList;

export {
  Utils$1 as Utils,
  MyString ,
  MyList ,
  currentState ,
  initialGame ,
  gameLoop ,
  
}
/* initialGame Not a pure module */
